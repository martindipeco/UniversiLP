/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ulpejemplo.vistas;

import javax.swing.JOptionPane;
import ulpejemplo.accesoDatos.MateriaData;
import ulpejemplo.entidades.Materia;

/**
 *
 * @author marti
 */
public class FormularioMaterias extends javax.swing.JInternalFrame {

    /**
     * Creates new form FormularioMaterias
     */
    public FormularioMaterias() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLmaterias = new javax.swing.JLabel();
        jLcodigo = new javax.swing.JLabel();
        jTFcodigo = new javax.swing.JTextField();
        jBbuscar = new javax.swing.JButton();
        jLnombre = new javax.swing.JLabel();
        jTFnombre = new javax.swing.JTextField();
        jLactivo = new javax.swing.JLabel();
        jRBactivo = new javax.swing.JRadioButton();
        jBnuevo = new javax.swing.JButton();
        jBeliminar = new javax.swing.JButton();
        jBguardar = new javax.swing.JButton();
        jBsalir = new javax.swing.JButton();
        jLanio = new javax.swing.JLabel();
        jTFanio = new javax.swing.JTextField();

        setClosable(true);
        setTitle("Formulario de Materias");

        jLmaterias.setFont(new java.awt.Font("Tahoma", 1, 27)); // NOI18N
        jLmaterias.setText("Materias");

        jLcodigo.setText("Código: ");

        jBbuscar.setText("Buscar");
        jBbuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBbuscarActionPerformed(evt);
            }
        });

        jLnombre.setText("Nombre: ");

        jLactivo.setText("Activo: ");

        jBnuevo.setText("Nuevo");
        jBnuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBnuevoActionPerformed(evt);
            }
        });

        jBeliminar.setText("Eliminar");
        jBeliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBeliminarActionPerformed(evt);
            }
        });

        jBguardar.setText("Guardar");
        jBguardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBguardarActionPerformed(evt);
            }
        });

        jBsalir.setText("Salir");
        jBsalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBsalirActionPerformed(evt);
            }
        });

        jLanio.setText("Año: ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(308, 308, 308)
                        .addComponent(jLmaterias))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLcodigo)
                            .addComponent(jLnombre)
                            .addComponent(jLactivo)
                            .addComponent(jBnuevo)
                            .addComponent(jLanio))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jTFcodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(45, 45, 45)
                                        .addComponent(jBbuscar))
                                    .addComponent(jTFnombre)
                                    .addComponent(jRBactivo)
                                    .addComponent(jTFanio)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(39, 39, 39)
                                .addComponent(jBeliminar)
                                .addGap(47, 47, 47)
                                .addComponent(jBguardar)
                                .addGap(59, 59, 59)
                                .addComponent(jBsalir)))))
                .addContainerGap(127, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLmaterias)
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLcodigo)
                    .addComponent(jTFcodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBbuscar))
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLnombre)
                    .addComponent(jTFnombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLanio)
                    .addComponent(jTFanio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRBactivo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLactivo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(123, 123, 123)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBeliminar)
                    .addComponent(jBguardar)
                    .addComponent(jBsalir)
                    .addComponent(jBnuevo))
                .addGap(112, 112, 112))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBbuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBbuscarActionPerformed
        // TODO add your handling code here:
        try
        {
            int codigo = Integer.parseInt(jTFcodigo.getText());
            //instancio una materia data para acceder a sus métodos
            MateriaData mateData = new MateriaData();
            //instancio una materia que recibirá los datos
            Materia mate = new Materia();
            //paso true como opcion a mostrar JOptionPane
            mate = mateData.buscarMateriaPorCodigo(codigo, true);
            //si el método me devuelve una materia null, significa que no existe esa materia
            if (mate == null)
            {
                //borramos codigo y nos vamos
                jTFcodigo.setText("");
                return;
            }
            else
            {
                //¿deshabilito "guardar" para evitar duplicados?
                //cargo datos en formulario
                jTFnombre.setText(mate.getNombre());
                jTFanio.setText("" + mate.getAnio()); //una manera de convertir int a string, sumarle una cadena vacía
                jRBactivo.setSelected(true); // si estamos acá es porque era activo, si no lo era, no lo devolvia, o devolvia null
                
                //apagar boton para guardar, porque ese alumno ya existe
                //no puedo apagarlo porque sino no puedo acceder a "modificar" desde el mismo botón
                //jBguardar.setEnabled(false);
                
                //¿agregar botón de "editar" para modificar datos????
            }
        }
        catch (NumberFormatException nfe)
        {
            JOptionPane.showMessageDialog(this, "Ingrese un número valido");
            jTFcodigo.setText("");
            return;
        }
    }//GEN-LAST:event_jBbuscarActionPerformed

    private void jBeliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBeliminarActionPerformed
        // TODO add your handling code here:
        try
        {
            int codigo = Integer.parseInt(jTFcodigo.getText());
            //instancio MateriaData y Materia
            MateriaData mateData = new MateriaData();
            Materia mate = new Materia();
            mate = mateData.buscarMateriaPorCodigo(codigo, false);
            if (mate == null)
            {
                jTFcodigo.setText("");
                return;
            }
            else
            {
                int id = mate.getId_materia();
                mateData.eliminarMateria(id);
                limpiarCampos();
                
                jBguardar.setEnabled(false);
            }
        }
        //An empty TextField, or doubles or floats would result in a NumberFormatException
        catch(NumberFormatException nfe)
        {
            JOptionPane.showMessageDialog(this, "Ingrese un número valido");
            jTFcodigo.setText("");
            return;
        }
    }//GEN-LAST:event_jBeliminarActionPerformed

    private void jBnuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBnuevoActionPerformed
        // TODO add your handling code here:
        //limpia campos
        limpiarCampos();
        //habilita guardar
        jBguardar.setEnabled(true);
        //hace editables todos los campos?
    }//GEN-LAST:event_jBnuevoActionPerformed

    private void jBsalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBsalirActionPerformed
        // TODO add your handling code here:
        int choice = JOptionPane.showConfirmDialog(this, "¿Salir de este formulario?", "Confirmación", JOptionPane.YES_NO_OPTION);
        if (choice == JOptionPane.YES_OPTION) 
        {
            // con dispose salimos del internal frame. Para salir x completo: "System.exit(0);"
            this.dispose();
        }
    }//GEN-LAST:event_jBsalirActionPerformed

    private void jBguardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBguardarActionPerformed
        // TODO add your handling code here:
        try
        {
            int codigo = Integer.parseInt(jTFcodigo.getText());
            //instancio una materia data para acceder a sus métodos
            MateriaData mateData = new MateriaData();
            //instancio una materia que recibirá los datos
            //metodo busccar por codigo no devuelve cartel de warning si no hay materia
            Materia mateAux = mateData.buscarMateriaPorCodigo(codigo, false);//seteo false para q no muestre carteles
            //si el método me devuelve una materia, habilito a modificar
            if (mateAux != null)
            {
                //guardo el id traido de la busqueda, y el resto lo obtengo del formulario
                //para luego pasarselo a la materia "posta", o "modificada"
                int mateID = mateAux.getId_materia();
                int mateCOD = Integer.parseInt(jTFcodigo.getText());
                String mateNOM = jTFnombre.getText();
                int mateANI = Integer.parseInt(jTFanio.getText());
                boolean activa = true;
                
                Materia matePosta = new Materia(mateID, mateCOD, mateNOM, mateANI, activa);
                
                //si no se hizo ninguna modificacion, no deberia habilitarse la posibilidad de modificar
                // la forma correcta es con Override equals() y hashCode() , despues -> if (mateAux.equals(matePosta))
                if (mateAux.getCodigoMateria() == matePosta.getCodigoMateria() && mateAux.getNombre().equals(matePosta.getNombre()) && mateAux.getAnio() == matePosta.getAnio() && mateAux.isActiva() == matePosta.isActiva())
                {
                    JOptionPane.showMessageDialog(this, "No se registran cambios");
                    return;
                }
                mateData.modificarMateria(matePosta);
            }
            else
            {
                //si la materia no existe, entonces la guardo
                //uso el codigo ya obtenido
                String nombre = jTFnombre.getText();
                int anio = Integer.parseInt(jTFanio.getText());
                boolean activa = false;
                if (jRBactivo.isSelected())
                {
                    activa = true;
                }
                Materia matePosta = new Materia(codigo, nombre, anio, activa);
                mateData.guardarMateria(matePosta);
            }
            limpiarCampos();
        }
        catch(NumberFormatException nfe)
        {
            JOptionPane.showMessageDialog(this, "Ingrese un dato valido");
            return;
        }
    }//GEN-LAST:event_jBguardarActionPerformed

    private void limpiarCampos()
    {
        jTFcodigo.setText("");
        jTFnombre.setText("");
        jTFanio.setText("");
        jRBactivo.setSelected(false);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBbuscar;
    private javax.swing.JButton jBeliminar;
    private javax.swing.JButton jBguardar;
    private javax.swing.JButton jBnuevo;
    private javax.swing.JButton jBsalir;
    private javax.swing.JLabel jLactivo;
    private javax.swing.JLabel jLanio;
    private javax.swing.JLabel jLcodigo;
    private javax.swing.JLabel jLmaterias;
    private javax.swing.JLabel jLnombre;
    private javax.swing.JRadioButton jRBactivo;
    private javax.swing.JTextField jTFanio;
    private javax.swing.JTextField jTFcodigo;
    private javax.swing.JTextField jTFnombre;
    // End of variables declaration//GEN-END:variables
}
